fn add(a: int, b: int, c: int) -> int {
    return a + b + c;
}

fn determinant(a: int, b: int, c: int) -> int {
    return b * b - 4 * a * c;
}

fn pow(a: int, b: int) -> int {
    let c = a;

    for let i = 1; i < b; i += 1 {
        c *= a;
    }

    return c;
}

struct Vector3 {
    x: int,
    y: int,
    z: int,

    static fn single(x: int) -> Vector3 {
        return Vector3(x, x, x);
    }

    fn diff(other: Vector3) -> Vector3 {
        return Vector3(other.x - self.x, other.y - self.y, other.z - self.z);
    }

    fn dot(other: Vector3) -> int {
        return self.x * other.x + self.y * other.y + self.z * other.z;
    }

    fn shift() {
        let t = self.x;
        self.x = self.y;
        self.y = self.z;
        self.z = t;
    }
}